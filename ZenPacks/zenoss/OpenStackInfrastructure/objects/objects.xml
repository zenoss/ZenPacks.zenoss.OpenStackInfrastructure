<?xml version="1.0"?>
<objects>
<!-- ('', 'zport', 'dmd', 'Devices', 'OpenStack', 'Infrastructure') -->
<object id='/zport/dmd/Devices/OpenStack/Infrastructure' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property id='zendoc' type='string'>
OpenStack Endpoints
</property>
<property type="string" id="description" mode="w" >
OpenStack Endpoints
</property>
<property visible="True" type="lines" id="zCollectorPlugins" >
['zenoss.OpenStackInfrastructure']
</property>
<property visible="True" type="boolean" id="zSnmpMonitorIgnore" >
True
</property>
<property visible="True" type="lines" id="zDeviceTemplates" >
['Endpoint']
</property>
<property visible="True" type="string" id="zPythonClass" >
ZenPacks.zenoss.OpenStackInfrastructure.Endpoint
</property>
<property visible="True" type="float" id="zCommandCommandTimeout" >
300.0
</property>
<property visible="True" type="int" id="zCommandCycleTime" >
300
</property>
<tomanycont id='rrdTemplates'>
<object id='Endpoint' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property id='zendoc' type='string'>
OpenStackInfrastructure: Endpoint Monitoring
</property>
<property type="text" id="description" mode="w" >
OpenStackInfrastructure: Endpoint Monitoring
</property>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.Endpoint
</property>
<tomanycont id='datasources'>
<object id='events' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.EventsAMQPDataSource' class='EventsAMQPDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Ceilometer Events AMQP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
30
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.EventsAMQPDataSource.EventsAMQPDataSourcePlugin
</property>
</object>
<object id='heartbearts' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.HeartbeatsAMQPDataSource' class='HeartbeatsAMQPDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Ceilometer Heartbeats AMQP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
30
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.HeartbeatsAMQPDataSource.HeartbeatsAMQPDataSourcePlugin
</property>
</object>
<object id='openstack' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.zenoss.OpenStackInfrastructure/path}/poll_openstack.py '${here/zCommandUsername}' '${here/zCommandPassword}' '${here/zOpenStackProjectId}' '${here/zOpenStackAuthUrl}' '${here/zOpenStackRegionName}'
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.parsers.endpoint
</property>
<tomanycont id='datapoints'>
<object id='agentAliveCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_alive__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentDHCPCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_dhcp__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentDeadCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_dead__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentHyperVCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_hyperv__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentL3Count' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_l3__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentLBCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_lb__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentLinuxBridgeCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_linux_bridge__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentMLNXCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_mlnx__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentMetadataCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_metadata__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentMeteringCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_metering__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentNECCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_nec__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentNICSCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_nics__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentOFACount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_ofa__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentOVSCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_ovs__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentSDNVECount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_sdnve__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='agentTotalCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='agent_total__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='flavorTotalCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='flavor_total__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='imageActiveCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='image_active__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='imageFailedCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='image_failed__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='imageOtherCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='image_other__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='imagePreparingCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='image_preparing__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='imageQueuedCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='image_queued__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='imageSavingCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='image_saving__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='imageTotalCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='image_total__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='imageUnknownCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='image_unknown__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='networkActiveCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='network_avtive__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='networkBuildCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='network_build__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='networkDownCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='network_down__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='networkErrorCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='network_error__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='networkExternalCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='network_external__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='networkInternalCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='network_internal__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='networkSharedCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='network_shared__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='networkTotalCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='network_total__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='routerActiveCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='router_active__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='routerBuildCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='router_build__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='routerDownCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='router_down__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='routerErrorCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='router_error__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='routerTotalCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='router_total__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverActiveCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_active__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverBuildCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_build__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverDeleteIpCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_delete__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverHardRebootCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_hard_reboot__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverOtherCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_other__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverPasswordCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_password__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverPrepResizeCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_prep_resize__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverQueueResizeCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_queue_resize__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverRebootCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_reboot__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverRebuildCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_rebuild__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverRescueCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_rescue__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverResizeCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_resize__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverSuspendedCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_suspended__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverTotalCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_total__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverUnknownCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_unknown__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
<object id='serverVerifyResizeCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='server_verify_resize__count' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='openstackQueues' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="commandTemplate" mode="w" >
${here/ZenPackManager/packs/ZenPacks.zenoss.OpenStackInfrastructure/path}/queue_counts.py '${here/id}'
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.parsers.OpenStackQueue
</property>
<tomanycont id='datapoints'>
<object id='eventQueueCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
<object id='perfQueueCount' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='serviceStatus' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.NovaServiceStatusDataSource' class='NovaServiceStatusDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Nova Service Status
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="cycletime" mode="w" >
30
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.NovaServiceStatusDataSource.NovaServiceStatusDataSourcePlugin
</property>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Agents' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
4
</property>
<tomanycont id='graphPoints'>
<object id='Active' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentActiveCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Alive' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentAliveCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='DHCP' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentDHCPCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Dead' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentDeadCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='HyperV' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
7
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentHyperVCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='IBM SDN-VE' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
15
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentSDNVECount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Level 3' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
10
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentL3Count
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Linux Bridge' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
6
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentLinuxBridgeCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Load Balancer' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
11
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentLBCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Mellanox' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
12
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentMLNXVCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Metadata' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
14
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentMetadataCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Metering' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
13
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentMeteringVCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='NEC OpenFlow' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
8
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentNECCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Open vSwitch' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
5
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentOVSCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='OpenFlow Agent' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
9
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentOFACount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='SR-IOV NIC' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
16
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentNICSCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_agentTotalCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Flavors' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Total' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_flavorTotalCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Images' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Active' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageActiveCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Failed' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageFailedCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Other' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageOtherCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Preparing' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imagePreparingCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Queued' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageQueuedCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Saving' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
5
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageSavingCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
6
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageTotalCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Unknown' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
7
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_imageUnknownCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Networks' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
5
</property>
<tomanycont id='graphPoints'>
<object id='Active' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_networkActiveCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Build' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_networkBuildCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Down' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_networkDownCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Error' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_networkErrorCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='External' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
6
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_networkExternalCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Internal' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
7
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_networkInternalCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Shared' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
5
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_networkSharedCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_networkTotalCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Queues' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
3
</property>
<tomanycont id='graphPoints'>
<object id='Event' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstackQueues_eventQueueCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='performance' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstackQueues_perfQueueCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Routers' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
6
</property>
<tomanycont id='graphPoints'>
<object id='Active' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_routerActiveCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Build' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_routerBuildCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Down' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_routerDownCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Error' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_routerErrorCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_routerTotalCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Servers' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
count
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Active' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverActiveCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Build' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverBuildCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Delete IP' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverDeleteIpCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Hard Reboot' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverHardRebootCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Other' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
4
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverOtherCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Password' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
5
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverPasswordCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Prep Resize' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
6
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverPrepResizeCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Queue Resize' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
7
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverQueueResizeCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Reboot' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
8
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverRebootCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Rebuild' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
9
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverRebuildCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Rescue' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
10
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverRescueCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Resize' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
11
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverResizeCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Suspended' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
12
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverSuspendedCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Total' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
13
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverTotalCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Unknown' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
14
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverUnknownCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Verify Resize' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
15
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%7.0lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
openstack_serverVerifyResizeCount
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='Instance' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property id='zendoc' type='string'>
OpenStackInfrastructure: Instance Monitoring
</property>
<property type="text" id="description" mode="w" >
OpenStackInfrastructure: Instance Monitoring
</property>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.Instance
</property>
<tomanycont id='datasources'>
<object id='cpuUtilization' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource' class='PerfAMQPDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Ceilometer Perf AMQP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
0
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource.PerfAMQPDataSourcePlugin
</property>
<property type="string" id="meter" >
cpu_util
</property>
<tomanycont id='datapoints'>
<object id='cpuUtilization' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='cpu__pct' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='diskReadBytesRate' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource' class='PerfAMQPDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Ceilometer Perf AMQP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
0
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource.PerfAMQPDataSourcePlugin
</property>
<property type="string" id="meter" >
disk.read.bytes.rate
</property>
<tomanycont id='datapoints'>
<object id='diskReadBytesRate' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='disk_read__bytessec' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='diskReadRequestsRate' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource' class='PerfAMQPDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Ceilometer Perf AMQP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
0
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource.PerfAMQPDataSourcePlugin
</property>
<property type="string" id="meter" >
disk.read.requests.rate
</property>
<tomanycont id='datapoints'>
<object id='diskReadRequestsRate' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='disk_reads__persec' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='diskWriteBytesRate' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource' class='PerfAMQPDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Ceilometer Perf AMQP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
0
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource.PerfAMQPDataSourcePlugin
</property>
<property type="string" id="meter" >
disk.write.bytes.rate
</property>
<tomanycont id='datapoints'>
<object id='diskWriteBytesRate' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='disk_write__bytessec' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='diskWriteRequestsRate' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource' class='PerfAMQPDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Ceilometer Perf AMQP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
0
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource.PerfAMQPDataSourcePlugin
</property>
<property type="string" id="meter" >
disk.write.requests.rate
</property>
<tomanycont id='datapoints'>
<object id='diskWriteRequestsRate' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='disk_writes__persec' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='CPU Utilization' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
percent
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
100
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='CPU Utilization' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
cpuUtilization_cpuUtilization
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Disk IO Rate' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bytes/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='Read' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
diskReadBytesRate_diskReadBytesRate
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Write' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
diskWriteBytesRate_diskWriteBytesRate
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Disk Requests' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
requests/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Read' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
diskReadRequestsRate_diskReadRequestsRate
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Write' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
diskWriteRequestsRate_diskWriteRequestsRate
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='Vnic' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property id='zendoc' type='string'>
OpenStackInfrastructure: Vnic Monitoring
</property>
<property type="text" id="description" mode="w" >
OpenStackInfrastructure: Vnic Monitoring
</property>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.Vnic
</property>
<tomanycont id='datasources'>
<object id='networkIncomingBytesRate' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource' class='PerfAMQPDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Ceilometer Perf AMQP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
0
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource.PerfAMQPDataSourcePlugin
</property>
<property type="string" id="meter" >
network.incoming.bytes.rate
</property>
<tomanycont id='datapoints'>
<object id='networkIncomingBytesRate' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='if_received__bytessec' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='networkIncomingPacketsRate' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource' class='PerfAMQPDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Ceilometer Perf AMQP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
0
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource.PerfAMQPDataSourcePlugin
</property>
<property type="string" id="meter" >
network.incoming.packets.rate
</property>
<tomanycont id='datapoints'>
<object id='networkIncomingPacketsRate' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='if_received_packets__persec' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='networkOutgoingBytesRate' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource' class='PerfAMQPDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Ceilometer Perf AMQP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
0
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource.PerfAMQPDataSourcePlugin
</property>
<property type="string" id="meter" >
network.outgoing.bytes.rate
</property>
<tomanycont id='datapoints'>
<object id='networkOutgoingBytesRate' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='if_sent__bytessec' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='networkOutgoingPacketsRate' module='ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource' class='PerfAMQPDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
OpenStack Ceilometer Perf AMQP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
${here/id}
</property>
<property type="int" id="severity" mode="w" >
0
</property>
<property type="string" id="cycletime" mode="w" >
300
</property>
<property type="string" id="plugin_classname" mode="w" >
ZenPacks.zenoss.OpenStackInfrastructure.datasources.PerfAMQPDataSource.PerfAMQPDataSourcePlugin
</property>
<property type="string" id="meter" >
network.outgoing.packets.rate
</property>
<tomanycont id='datapoints'>
<object id='networkOutgoingPacketsRate' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
<tomanycont id='aliases'>
<object id='if_sent_packets__persec' module='Products.ZenModel.RRDDataPointAlias' class='RRDDataPointAlias'>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Network Packet Rate' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
packets/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='Inbound' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
networkIncomingPacketsRate_networkIncomingPacketsRate
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Outbound' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
networkOutgoingPacketsRate_networkOutgoingPacketsRate
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Network Throughput' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
bytes/sec
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='Inbound' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
networkIncomingBytesRate_networkIncomingBytesRate
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='Outbound' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
networkOutgoingBytesRate_networkOutgoingBytesRate
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'OpenStack') -->
<object id='/zport/dmd/Events/OpenStack' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='OpenStack Events Default' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
from ZenPacks.zenoss.OpenStackInfrastructure.events import process
process(evt, device, dmd, txnCommit)
</property>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
10
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|')
</property>
<property type="string" id="example" mode="w" >
openstack|compute.instance.create.start
</property>
<property type="text" id="explanation" mode="w" >
Default event transform for all OpenStack Ceilometer notifications.  Maps to /OpenStack, history.
</property>
<property visible="True" type="string" id="zEventAction" >
history
</property>
</object>
</tomanycont>
<object id='compute' module='Products.ZenEvents.EventClass' class='EventClass'>
<object id='instance' module='Products.ZenEvents.EventClass' class='EventClass'>
<tomanycont id='instances'>
<object id='compute.instance default mapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
11
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|compute.instance.')
</property>
<property type="text" id="explanation" mode="w" >
All compute.instance events not otherwise mapped will be placed in the /OpenStackInfrastructure/compute/instance class history.
</property>
<property visible="True" type="string" id="zEventAction" >
history
</property>
</object>
<object id='compute.instance.create.error' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
openstack|compute.instance.create.error
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="text" id="explanation" mode="w" >
An error has occurred while creating an instance
</property>
<property visible="True" type="int" id="zEventSeverity" >
4
</property>
</object>
<object id='compute.instance.exists' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
openstack|compute.instance.exists
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="text" id="explanation" mode="w" >
Drop compute.instance.exists events, not worth storing in event history.
</property>
<property visible="True" type="string" id="zEventAction" >
drop
</property>
</object>
<object id='compute.instance.exists.verified.old' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
openstack|compute.instance.exists.verified.old
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="text" id="explanation" mode="w" >
Drop compute.instance.exists.verified.old events, not worth storing in event history.
</property>
<property visible="True" type="string" id="zEventAction" >
drop
</property>
</object>
</tomanycont>
</object>
</object>
<object id='dhcp_agent' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|dhcp_agent.')
</property>
</object>
</tomanycont>
</object>
<object id='firewall' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|firewall.')
</property>
</object>
</tomanycont>
</object>
<object id='firewall_policy' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|firewall_policy.')
</property>
</object>
</tomanycont>
</object>
<object id='firewall_rule' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|firewall_rule.')
</property>
</object>
</tomanycont>
</object>
<object id='floatingip' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|floatingip.')
</property>
</object>
</tomanycont>
</object>
<object id='network' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|network.')
</property>
</object>
</tomanycont>
</object>
<object id='port' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|port.')
</property>
</object>
</tomanycont>
</object>
<object id='router' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|router.')
</property>
</object>
</tomanycont>
</object>
<object id='security_group' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|security_group.')
</property>
</object>
</tomanycont>
</object>
<object id='security_group_rule' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|security_group_rule.')
</property>
</object>
</tomanycont>
</object>
<object id='subnet' module='Products.ZenEvents.EventClass' class='EventClass'>
<property visible="True" type="string" id="zEventAction" >
history
</property>
<tomanycont id='instances'>
<object id='defaultmapping' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
defaultmapping
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="string" id="rule" mode="w" >
(getattr(evt, 'eventClassKey', '') or '').startswith('openstack|subnet.')
</property>
</object>
</tomanycont>
</object>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'instances', 'openStackCeilometerHeartbeat') -->
<object id='/zport/dmd/Events/Status/instances/openStackCeilometerHeartbeat' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
openStackCeilometerHeartbeat
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'instances', 'openStackNovaServiceStatus') -->
<object id='/zport/dmd/Events/Status/instances/openStackNovaServiceStatus' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="string" id="eventClassKey" mode="w" >
openStackNovaServiceStatus
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
<property type="text" id="explanation" mode="w" >
A nova service is not running properly
</property>
<property type="text" id="resolution" mode="w" >
Restart the offending service.
</property>
</object>
<!-- ('', 'zport', 'dmd', 'Manufacturers', 'OpenStack') -->
<object id='/zport/dmd/Manufacturers/OpenStack' module='Products.ZenModel.Manufacturer' class='Manufacturer'>
<property type="string" id="url" mode="w" >
http://www.openstack.org/
</property>
<property type="string" id="zip" mode="w" >
</property>
<property type="lines" id="regexes" mode="w" >
[]
</property>
<tomanycont id='products'>
<object id='2015.2' module='Products.ZenModel.SoftwareClass' class='SoftwareClass'>
<property type="string" id="name" mode="w" >
2015.2
</property>
<property type="lines" id="productKeys" mode="w" >
['2015.2.1', '2015.2.2', '2015.2.3', '2015.2.4', '2015.2.5', '2015.2.6', '2015.2.7', '2015.2.8', '2015.2.9', '2015.2.10']
</property>
<property type="boolean" id="isOS" mode="w" >
True
</property>
</object>
<object id='2016.1' module='Products.ZenModel.SoftwareClass' class='SoftwareClass'>
<property type="string" id="name" mode="w" >
2016.1
</property>
<property type="lines" id="productKeys" mode="w" >
['2016.1.1', '2016.1.2', '2016.1.3', '2016.1.4', '2016.1.5', '2016.1.6', '2016.1.7', '2016.1.8', '2016.1.9', '2016.1.10']
</property>
<property type="boolean" id="isOS" mode="w" >
True
</property>
</object>
<object id='2016.2' module='Products.ZenModel.SoftwareClass' class='SoftwareClass'>
<property type="string" id="name" mode="w" >
2016.2
</property>
<property type="lines" id="productKeys" mode="w" >
['2016.2.1', '2016.2.2', '2016.2.3', '2016.2.4', '2016.2.5', '2016.2.6', '2016.2.7', '2016.2.8', '2016.2.9', '2016.2.10']
</property>
<property type="boolean" id="isOS" mode="w" >
True
</property>
</object>
<object id='2017.1' module='Products.ZenModel.SoftwareClass' class='SoftwareClass'>
<property type="string" id="name" mode="w" >
2017.1
</property>
<property type="lines" id="productKeys" mode="w" >
['2017.1.1', '2017.1.2', '2017.1.3', '2017.1.4', '2017.1.5', '2017.1.6', '2017.1.7', '2017.1.8', '2017.1.9', '2017.1.10']
</property>
<property type="boolean" id="isOS" mode="w" >
True
</property>
</object>
<object id='2017.2' module='Products.ZenModel.SoftwareClass' class='SoftwareClass'>
<property type="string" id="name" mode="w" >
2017.2
</property>
<property type="lines" id="productKeys" mode="w" >
['2017.2.1', '2017.2.2', '2017.2.3', '2017.2.4', '2017.2.5', '2017.2.6', '2017.2.7', '2017.2.8', '2017.2.9', '2017.2.10']
</property>
<property type="boolean" id="isOS" mode="w" >
True
</property>
</object>
<object id='Havana (2013.2)' module='Products.ZenModel.SoftwareClass' class='SoftwareClass'>
<property type="string" id="name" mode="w" >
Havana (2013.2)
</property>
<property type="lines" id="productKeys" mode="w" >
['2013.2.1', '2013.2.2', '2013.2.3', '2013.2.4', '2013.2.5', '2013.2.6', '2013.2.7', '2013.2.8', '2013.2.9', '2013.2.10']
</property>
<property type="boolean" id="isOS" mode="w" >
True
</property>
</object>
<object id='Icehouse (2014.1)' module='Products.ZenModel.SoftwareClass' class='SoftwareClass'>
<property type="string" id="name" mode="w" >
Icehouse (2014.1)
</property>
<property type="lines" id="productKeys" mode="w" >
['2014.1.1', '2014.1.2', '2014.1.3', '2014.1.4', '2014.1.5', '2014.1.6', '2014.1.7', '2014.1.8', '2014.1.9', '2014.1.10']
</property>
<property type="boolean" id="isOS" mode="w" >
True
</property>
</object>
<object id='Juno (2014.2)' module='Products.ZenModel.SoftwareClass' class='SoftwareClass'>
<property type="string" id="name" mode="w" >
Juno (2014.2)
</property>
<property type="lines" id="productKeys" mode="w" >
['2014.2.1', '2014.2.2', '2014.2.3', '2014.2.4', '2014.2.5', '2014.2.6', '2014.2.7', '2014.2.8', '2014.2.9', '2014.2.10']
</property>
<property type="boolean" id="isOS" mode="w" >
True
</property>
</object>
<object id='Kilo (2015.1)' module='Products.ZenModel.SoftwareClass' class='SoftwareClass'>
<property type="string" id="name" mode="w" >
Kilo (2015.1)
</property>
<property type="lines" id="productKeys" mode="w" >
['2015.1.1', '2015.1.2', '2015.1.3', '2015.1.4', '2015.1.5', '2015.1.6', '2015.1.7', '2015.1.8', '2015.1.9', '2015.1.10']
</property>
<property type="boolean" id="isOS" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Processes', 'OpenStack') -->
<object id='/zport/dmd/Processes/OpenStack' module='Products.ZenModel.OSProcessOrganizer' class='OSProcessOrganizer'>
<property visible="True" type="int" id="zModelerLock" >
1
</property>
<tomanycont id='osProcessClasses'>
<object id='ceilometer-agent-central' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
ceilometer-agent-central
</property>
<property type="string" id="regex" mode="w" >
ceilometer-agent-central
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
1
</property>
</object>
<object id='ceilometer-agent-compute' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
ceilometer-agent-compute
</property>
<property type="string" id="regex" mode="w" >
ceilometer-agent-compute
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
2
</property>
</object>
<object id='ceilometer-agent-notification' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
ceilometer-agent-notification
</property>
<property type="string" id="regex" mode="w" >
ceilometer-agent-notification
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
3
</property>
</object>
<object id='ceilometer-alarm-evaluator' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
ceilometer-alarm-evaluator
</property>
<property type="string" id="regex" mode="w" >
ceilometer-alarm-evaluator
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
4
</property>
</object>
<object id='ceilometer-alarm-notifier' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
ceilometer-alarm-notifier
</property>
<property type="string" id="regex" mode="w" >
ceilometer-alarm-notifier
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
5
</property>
</object>
<object id='ceilometer-api' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
ceilometer-api
</property>
<property type="string" id="regex" mode="w" >
ceilometer-api
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
6
</property>
</object>
<object id='ceilometer-collector' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
ceilometer-collector
</property>
<property type="string" id="regex" mode="w" >
ceilometer-collector
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='neutron-dhcp-agent' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
neutron-dhcp-agent
</property>
<property type="string" id="regex" mode="w" >
neutron-dhcp-agent
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='neutron-l3-agent' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
neutron-l3-agent
</property>
<property type="string" id="regex" mode="w" >
neutron-l3-agent
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='neutron-metadata-agent' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
neutron-metadata-agent
</property>
<property type="string" id="regex" mode="w" >
neutron-metadata-agent
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='neutron-openvswitch-agent' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
neutron-openvswitch-agent
</property>
<property type="string" id="regex" mode="w" >
neutron-openvswitch-agent
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='neutron-server' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
neutron-server
</property>
<property type="string" id="regex" mode="w" >
neutron-server
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
0
</property>
</object>
<object id='nova-api' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
nova-api
</property>
<property type="string" id="regex" mode="w" >
nova-api
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
15
</property>
</object>
<object id='nova-cert' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
nova-cert
</property>
<property type="string" id="regex" mode="w" >
nova-cert
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
8
</property>
</object>
<object id='nova-compute' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
nova-compute
</property>
<property type="string" id="regex" mode="w" >
nova-compute
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
13
</property>
</object>
<object id='nova-conductor' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
nova-conductor
</property>
<property type="string" id="regex" mode="w" >
nova-conductor
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
9
</property>
</object>
<object id='nova-consoleauth' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
nova-consoleauth
</property>
<property type="string" id="regex" mode="w" >
nova-consoleauth
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
10
</property>
</object>
<object id='nova-network' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
nova-network
</property>
<property type="string" id="regex" mode="w" >
nova-network
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
11
</property>
</object>
<object id='nova-scheduler' module='Products.ZenModel.OSProcessClass' class='OSProcessClass'>
<property type="string" id="name" mode="w" >
nova-scheduler
</property>
<property type="string" id="regex" mode="w" >
nova-scheduler
</property>
<property type="string" id="excludeRegex" mode="w" >
\b(vim|tail|grep|tar|cat|bash)\b
</property>
<property type="boolean" id="ignoreParametersWhenModeling" mode="w" >
False
</property>
<property type="boolean" id="ignoreParameters" mode="w" >
False
</property>
<property type="int" id="sequence" mode="w" >
12
</property>
</object>
</tomanycont>
</object>
</objects>
