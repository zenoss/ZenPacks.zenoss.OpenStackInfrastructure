name: ZenPacks.zenoss.OpenStackInfrastructure
zProperties:
  DEFAULTS:
    category: OpenStack
  zOpenStackExtraHosts:
    type: lines
  zOpenStackHostDeviceClass:
    default: /Server/SSH/Linux/NovaHost
  zOpenStackNovaApiHosts:
    type: lines
  zOpenStackCinderApiHosts:
    type: lines
  zOpenStackExtraApiEndpoints:
    # Format of each line is [service type]:[url]
    # changes to this property will not affect monitoring until the device
    # is re-modeled.
    type: lines
  zOpenStackHostMapToId:
    type: lines
  zOpenStackHostMapSame:
    type: lines
  zOpenStackNeutronConfigDir:
    default: /etc/neutron
  zOpenStackRunNovaManageInContainer:
    default: ''
  zOpenStackRunVirshQemuInContainer:
    default: ''
  zOpenStackRunNeutronCommonInContainer:
    default: ''
  zOpenStackAMQPUsername:
    default: openstack
  zOpenStackAMQPPassword:
    type: password
  zOpenStackHostLocalDomain:
    default: ''
  zOpenStackProcessEventTypes:
    type: lines

class_relationships:
# Containing Relations
- Endpoint(components) 1:MC OpenstackComponent
- Instance 1:MC Vnic
# Non-Containing Relations
- NeutronAgent M:M Router
- NeutronAgent M:M Network
- NeutronAgent M:M Subnet
# Non-containing 1:M
- OrgComponent(childOrgs) 1:M (parentOrg)OrgComponent
- Host(hostedSoftware) 1:M (hostedOn)SoftwareComponent
- OrgComponent 1:M Host
- OrgComponent 1:M SoftwareComponent
- OrgComponent 1:M Pool
# Tenant -> * (Instance,Network,Subnet,Router,Port,FloatingIp)
- Tenant 1:M Instance
- Tenant 1:M Network
- Tenant 1:M Subnet
- Tenant 1:M Router
- Tenant 1:M Port
- Tenant 1:M FloatingIp
# Cinder
- Tenant 1:M Volume
- Tenant 1:M VolSnapshot
# release 2.2.0 does not do backup
#- Tenant 1:M Backup
- Tenant 1:1 Quota
# Flavor
- Flavor 1:M Instance
- Image 1:M Instance
# Hypervisor
- Hypervisor 1:M Instance
# Network ->
#    Routers can have a common network gateway
- Network 1:M Subnet
- Network 1:M Port
- Network 1:M FloatingIp
- Network 1:M Router
- Instance 1:M Port
#  Ports* <-> *Subnets:
#     Port can have many subnets via fixed_ips.
#     Many Ports can associate to a single Subnet
- Port M:M Subnet
- Port 1:M FloatingIp
# Router -> downstream Subnets and 1 upstream Network
#    Router can connect to many subnets, a subnet can connect to several routers
#    EG: router_AB + router_C connect to public_subnet:  subnet -> *router
#    EG: since public network can have multiple subnets: router -> *subnet
#    Router can have many ports with limitation one port per a subnet
- Router 1:M FloatingIp
- Router M:M Subnet
- Router 1:M Port
- Hypervisor 1:1 Host
# Cinder
- Instance 1:M Volume
- Volume 1:M VolSnapshot
- VolType 1:M Volume
# release 2.2.0 does not do backup
#- Volume 1:M Backup
device_classes:
  /Server/SSH/Linux/NovaHost:
    remove: True
    zProperties:
      zSshConcurrentSessions: 5
  /OpenStack: {}
  /OpenStack/Infrastructure:
    remove: true
    reset: true
    zProperties:
      zCollectorPlugins:
        - zenoss.OpenStackInfrastructure
      zCommandCommandTimeout: 300
      zDeviceTemplates:
        - Endpoint
      zPythonClass: ZenPacks.zenoss.OpenStackInfrastructure.Endpoint
      zSnmpMonitorIgnore: true
      zOpenStackProcessEventTypes:
        - compute.instance.create.error

    templates:
      Endpoint:
        description: 'OpenStackInfrastructure: Endpoint Monitoring'
        targetPythonClass: ZenPacks.zenoss.OpenStackInfrastructure.Endpoint
        datasources:
          events:
            type: OpenStack Ceilometer Events AMQP
            cycletime: 30
          heartbearts:
            type: OpenStack Ceilometer Heartbeats AMQP
            cycletime: 30
          neutronAgentStatus:
            type: OpenStack Neutron Agent Status
            cycletime: 30
          maintenance:
            type: Python
            plugin_classname: ZenPacks.zenoss.OpenStackInfrastructure.dsplugins.MaintenanceDataSourcePlugin
            cycletime: 7200
          rabbitmq-credentials:
            type: Python
            plugin_classname: ZenPacks.zenoss.OpenStackInfrastructure.dsplugins.RabbitMQCeilometerCredentialsDataSourcePlugin
            cycletime: 300
          openstack:
            type: COMMAND
            commandTemplate: ${here/ZenPackManager/packs/ZenPacks.zenoss.OpenStackInfrastructure/path}/poll_openstack.py
              '${here/zCommandUsername}' '${here/zCommandPassword}' '${here/zOpenStackProjectId}'
              '${here/zOpenStackAuthUrl}' '${here/zOpenStackRegionName}'
            datapoints:
              agentAliveCount:
                aliases: {agent_alive__count: null}
              agentDHCPCount:
                aliases: {agent_dhcp__count: null}
              agentDeadCount:
                aliases: {agent_dead__count: null}
              agentHyperVCount:
                aliases: {agent_hyperv__count: null}
              agentL3Count:
                aliases: {agent_l3__count: null}
              agentLBCount:
                aliases: {agent_lb__count: null}
              agentLinuxBridgeCount:
                aliases: {agent_linux_bridge__count: null}
              agentMLNXCount:
                aliases: {agent_mlnx__count: null}
              agentMetadataCount:
                aliases: {agent_metadata__count: null}
              agentMeteringCount:
                aliases: {agent_metering__count: null}
              agentNECCount:
                aliases: {agent_nec__count: null}
              agentNICSCount:
                aliases: {agent_nics__count: null}
              agentOFACount:
                aliases: {agent_ofa__count: null}
              agentOVSCount:
                aliases: {agent_ovs__count: null}
              agentSDNVECount:
                aliases: {agent_sdnve__count: null}
              agentTotalCount:
                aliases: {agent_total__count: null}
              flavorTotalCount:
                aliases: {flavor_total__count: null}
              imageActiveCount:
                aliases: {image_active__count: null}
              imageFailedCount:
                aliases: {image_failed__count: null}
              imageOtherCount:
                aliases: {image_other__count: null}
              imagePreparingCount:
                aliases: {image_preparing__count: null}
              imageQueuedCount:
                aliases: {image_queued__count: null}
              imageSavingCount:
                aliases: {image_saving__count: null}
              imageTotalCount:
                aliases: {image_total__count: null}
              imageUnknownCount:
                aliases: {image_unknown__count: null}
              networkActiveCount:
                aliases: {network_avtive__count: null}
              networkBuildCount:
                aliases: {network_build__count: null}
              networkDownCount:
                aliases: {network_down__count: null}
              networkErrorCount:
                aliases: {network_error__count: null}
              networkExternalCount:
                aliases: {network_external__count: null}
              networkInternalCount:
                aliases: {network_internal__count: null}
              networkSharedCount:
                aliases: {network_shared__count: null}
              networkTotalCount:
                aliases: {network_total__count: null}
              routerActiveCount:
                aliases: {router_active__count: null}
              routerBuildCount:
                aliases: {router_build__count: null}
              routerDownCount:
                aliases: {router_down__count: null}
              routerErrorCount:
                aliases: {router_error__count: null}
              routerTotalCount:
                aliases: {router_total__count: null}
              serverActiveCount:
                aliases: {server_active__count: null}
              serverBuildCount:
                aliases: {server_build__count: null}
              serverDeleteIpCount:
                aliases: {server_delete__count: null}
              serverHardRebootCount:
                aliases: {server_hard_reboot__count: null}
              serverOtherCount:
                aliases: {server_other__count: null}
              serverPasswordCount:
                aliases: {server_password__count: null}
              serverPrepResizeCount:
                aliases: {server_prep_resize__count: null}
              serverQueueResizeCount:
                aliases: {server_queue_resize__count: null}
              serverRebootCount:
                aliases: {server_reboot__count: null}
              serverRebuildCount:
                aliases: {server_rebuild__count: null}
              serverRescueCount:
                aliases: {server_rescue__count: null}
              serverResizeCount:
                aliases: {server_resize__count: null}
              serverSuspendedCount:
                aliases: {server_suspended__count: null}
              serverTotalCount:
                aliases: {server_total__count: null}
              serverUnknownCount:
                aliases: {server_unknown__count: null}
              serverVerifyResizeCount:
                aliases: {server_verify_resize__count: null}
              volumeActiveCount:
                aliases: {volume_active__count: null}
              volumeBootableCount:
                aliases: {volume_bootable__count: null}
              volumeAttachedCount:
                aliases: {volume_attached__count: null}
              volumeAvailableCount:
                aliases: {volume_available__count: null}
              volumeInUseCount:
                aliases: {volume_inuse__count: null}
              volumeTotalCount:
                aliases: {volume_total__count: null}
              volumeUnknownCount:
                aliases: {volume_unknown__count: null}
              snapshotTotalCount:
                aliases: {snapshot_total__count: null}
              snapshotAvailableCount:
                aliases: {snapshot_available__count: null}
              snapshotInProgressCount:
                aliases: {snapshot_inprogress__count: null}
              poolTotalCount:
                aliases: {pool_total__count: null}
              poolThinProvisioningSupportCount:
                aliases: {pool_thin_provisioning_support__count: null}
              poolThickProvisioningSupportCount:
                aliases: {pool_thick_provisioning_support__count: null}
              poolQoSSupportCount:
                aliases: {pool_qos_support__count: null}
            parser: ZenPacks.zenoss.OpenStackInfrastructure.parsers.endpoint
          openstackQueues:
            type: OpenStack AMQP Queue Size
            cycletime: 300
            datapoints:
              eventQueueCount: {}
              perfQueueCount: {}
          serviceStatus:
            type: OpenStack Nova Service Status
            cycletime: 30
          cinderServiceStatus:
            type: OpenStack Cinder Service Status
            cycletime: 30
        graphs:
          Agents:
            units: count
            miny: 0
            graphpoints:
              Alive:
                dpName: openstack_agentAliveCount
                format: '%7.0lf'
              DHCP:
                dpName: openstack_agentDHCPCount
                format: '%7.0lf'
              Dead:
                dpName: openstack_agentDeadCount
                format: '%7.0lf'
              HyperV:
                dpName: openstack_agentHyperVCount
                format: '%7.0lf'
              IBM SDN-VE:
                dpName: openstack_agentSDNVECount
                format: '%7.0lf'
              Level 3:
                dpName: openstack_agentL3Count
                format: '%7.0lf'
              Linux Bridge:
                dpName: openstack_agentLinuxBridgeCount
                format: '%7.0lf'
              Load Balancer:
                dpName: openstack_agentLBCount
                format: '%7.0lf'
              Mellanox:
                dpName: openstack_agentMLNXCount
                format: '%7.0lf'
              Metadata:
                dpName: openstack_agentMetadataCount
                format: '%7.0lf'
              Metering:
                dpName: openstack_agentMeteringCount
                format: '%7.0lf'
              NEC OpenFlow:
                dpName: openstack_agentNECCount
                format: '%7.0lf'
              Open vSwitch:
                dpName: openstack_agentOVSCount
                format: '%7.0lf'
              OpenFlow Agent:
                dpName: openstack_agentOFACount
                format: '%7.0lf'
              SR-IOV NIC:
                dpName: openstack_agentNICSCount
                format: '%7.0lf'
              Total:
                dpName: openstack_agentTotalCount
                format: '%7.0lf'
          Flavors:
            units: count
            miny: 0
            graphpoints:
              Total:
                dpName: openstack_flavorTotalCount
                format: '%7.0lf'
          Images:
            units: count
            miny: 0
            graphpoints:
              Active:
                dpName: openstack_imageActiveCount
                format: '%7.0lf'
              Failed:
                dpName: openstack_imageFailedCount
                format: '%7.0lf'
              Other:
                dpName: openstack_imageOtherCount
                format: '%7.0lf'
              Preparing:
                dpName: openstack_imagePreparingCount
                format: '%7.0lf'
              Queued:
                dpName: openstack_imageQueuedCount
                format: '%7.0lf'
              Saving:
                dpName: openstack_imageSavingCount
                format: '%7.0lf'
              Total:
                dpName: openstack_imageTotalCount
                format: '%7.0lf'
              Unknown:
                dpName: openstack_imageUnknownCount
                format: '%7.0lf'
          Networks:
            units: count
            miny: 0
            graphpoints:
              Active:
                dpName: openstack_networkActiveCount
                format: '%7.0lf'
              Build:
                dpName: openstack_networkBuildCount
                format: '%7.0lf'
              Down:
                dpName: openstack_networkDownCount
                format: '%7.0lf'
              Error:
                dpName: openstack_networkErrorCount
                format: '%7.0lf'
              External:
                dpName: openstack_networkExternalCount
                format: '%7.0lf'
              Internal:
                dpName: openstack_networkInternalCount
                format: '%7.0lf'
              Shared:
                dpName: openstack_networkSharedCount
                format: '%7.0lf'
              Total:
                dpName: openstack_networkTotalCount
                format: '%7.0lf'
          Queues:
            units: count
            miny: 0
            graphpoints:
              Event:
                dpName: openstackQueues_eventQueueCount
                format: '%7.0lf'
              Performance:
                dpName: openstackQueues_perfQueueCount
                format: '%7.0lf'
                color: 98df8a
          Routers:
            units: count
            miny: 0
            graphpoints:
              Active:
                dpName: openstack_routerActiveCount
                format: '%7.0lf'
              Build:
                dpName: openstack_routerBuildCount
                format: '%7.0lf'
              Down:
                dpName: openstack_routerDownCount
                format: '%7.0lf'
              Error:
                dpName: openstack_routerErrorCount
                format: '%7.0lf'
              Total:
                dpName: openstack_routerTotalCount
                format: '%7.0lf'
          Servers:
            units: count
            miny: 0
            graphpoints:
              Active:
                dpName: openstack_serverActiveCount
                format: '%7.0lf'
              Build:
                dpName: openstack_serverBuildCount
                format: '%7.0lf'
              Delete IP:
                dpName: openstack_serverDeleteIpCount
                format: '%7.0lf'
              Hard Reboot:
                dpName: openstack_serverHardRebootCount
                format: '%7.0lf'
              Password:
                dpName: openstack_serverPasswordCount
                format: '%7.0lf'
              Prep Resize:
                dpName: openstack_serverPrepResizeCount
                format: '%7.0lf'
              Queue Resize:
                dpName: openstack_serverQueueResizeCount
                format: '%7.0lf'
              Reboot:
                dpName: openstack_serverRebootCount
                format: '%7.0lf'
              Rebuild:
                dpName: openstack_serverRebuildCount
                format: '%7.0lf'
              Rescue:
                dpName: openstack_serverRescueCount
                format: '%7.0lf'
              Resize:
                dpName: openstack_serverResizeCount
                format: '%7.0lf'
              Shutdown or Paused:
                dpName: openstack_serverOtherCount
                format: '%7.0lf'
              Suspended:
                dpName: openstack_serverSuspendedCount
                format: '%7.0lf'
              Total:
                dpName: openstack_serverTotalCount
                format: '%7.0lf'
              Unknown:
                dpName: openstack_serverUnknownCount
                format: '%7.0lf'
              Verify Resize:
                dpName: openstack_serverVerifyResizeCount
                format: '%7.0lf'
          Volumes:
            units: count
            miny: 0
            graphpoints:
              Active:
                dpName: openstack_volumeActiveCount
                format: '%7.0lf'
              Bootable:
                dpName: openstack_volumeBootableCount
                format: '%7.0lf'
              Attached:
                dpName: openstack_volumeAttachedCount
                format: '%7.0lf'
              Available:
                dpName: openstack_volumeAvailableCount
                format: '%7.0lf'
              InUse:
                dpName: openstack_volumeInUseCount
                format: '%7.0lf'
              Total:
                dpName: openstack_volumeTotalCount
                format: '%7.0lf'
              Unknown:
                dpName: openstack_volumeUnknownCount
                format: '%7.0lf'
          Snapshots:
            units: count
            miny: 0
            graphpoints:
              Total:
                dpName: openstack_snapshotTotalCount
                format: '%7.0lf'
              Available:
                dpName: openstack_snapshotAvailableCount
                format: '%7.0lf'
              In Progress:
                dpName: openstack_snapshotInProgressCount
                format: '%7.0lf'
          Pools:
            units: count
            miny: 0
            graphpoints:
              Total:
                dpName: openstack_poolTotalCount
                format: '%7.0lf'
              Thin Provision:
                dpName: openstack_poolThinProvisioningSupportCount
                format: '%7.0lf'
              Thick Provision:
                dpName: openstack_poolThickProvisioningSupportCount
                format: '%7.0lf'
              QoS:
                dpName: openstack_poolQoSSupportCount
                format: '%7.0lf'
      ApiEndpoint:
        description: 'OpenStackInfrastructure: API Endpoint Monitoring'
        targetPythonClass: ZenPacks.zenoss.OpenStackInfrastructure.ApiEndpoint
        datasources:
          identity:
            # keystone
            type: OpenStack API Endpoint Status
            cycletime: 30
            sample_url: http://192.168.2.15:5000/v2.0 or http://192.168.2.15:5000
            auth_required: false
            ok_result: version
          compute:
            # nova
            type: OpenStack API Endpoint Status
            cycletime: 30
            sample_url: http://192.168.2.15:8774/v2.1
            auth_required: true
            ok_result: version
          image:
            # glance
            type: OpenStack API Endpoint Status
            cycletime: 30
            sample_url: http://192.168.2.15:9292
            auth_required: false
            ok_result: version
          network:
            # neutron
            type: OpenStack API Endpoint Status
            cycletime: 30
            sample_url: http://192.168.2.15:9696
            auth_required: false
            ok_result: version
          volume:
            # cinder v1
            type: OpenStack API Endpoint Status
            cycletime: 30
            sample_url: http://192.168.2.15:8776/v1
            auth_required: true
            ok_result: version
          volumev2:
            # cinder v2
            type: OpenStack API Endpoint Status
            cycletime: 30
            sample_url: http://192.168.2.15:8776/v2
            auth_required: true
            ok_result: version
          volumev3:
            # cinder v3
            type: OpenStack API Endpoint Status
            cycletime: 30
            sample_url: http://192.168.2.15:8776/v3
            auth_required: true
            ok_result: version
          metric:
            # gnocchi
            type: OpenStack API Endpoint Status
            cycletime: 30
            sample_url: http://192.168.2.15:969
            auth_required: false
            ok_result: version
          alarming:
            # aodh
            type: OpenStack API Endpoint Status
            cycletime: 30
            sample_url: http://192.168.2.15:8042
            auth_required: true
            ok_result: version
          metering:
            # ceilometer
            type: OpenStack API Endpoint Status
            cycletime: 30
            sample_url: http://192.168.2.15:8777
            auth_required: true
            ok_result: version
          object-store:
            # swift
            type: OpenStack API Endpoint Status
            cycletime: 30
            sample_url: http://192.168.2.15:8080/v1
            auth_required: true
            ok_result: version
      Instance:
        description: 'OpenStackInfrastructure: Instance Monitoring'
        targetPythonClass: ZenPacks.zenoss.OpenStackInfrastructure.Instance
        datasources:
          cpuUtilization:
            type: OpenStack Ceilometer Perf AMQP
            severity: clear
            cycletime: 600
            datapoints:
              cpuUtilization:
                aliases: {cpu__pct: null}
            meter: cpu_util
          diskReadBytesRate:
            type: OpenStack Ceilometer Perf AMQP
            severity: clear
            cycletime: 600
            datapoints:
              diskReadBytesRate:
                aliases: {disk_read__bytessec: null}
            meter: disk.read.bytes.rate
          diskReadRequestsRate:
            type: OpenStack Ceilometer Perf AMQP
            severity: clear
            cycletime: 600
            datapoints:
              diskReadRequestsRate:
                aliases: {disk_reads__persec: null}
            meter: disk.read.requests.rate
          diskWriteBytesRate:
            type: OpenStack Ceilometer Perf AMQP
            severity: clear
            cycletime: 600
            datapoints:
              diskWriteBytesRate:
                aliases: {disk_write__bytessec: null}
            meter: disk.write.bytes.rate
          diskWriteRequestsRate:
            type: OpenStack Ceilometer Perf AMQP
            severity: clear
            cycletime: 600
            datapoints:
              diskWriteRequestsRate:
                aliases: {disk_writes__persec: null}
            meter: disk.write.requests.rate
        graphs:
          CPU Utilization:
            units: percent
            miny: 0
            maxy: 100
            graphpoints:
              CPU Utilization:
                dpName: cpuUtilization_cpuUtilization
                format: '%5.2lf'
          Disk IO Rate:
            units: bytes/sec
            miny: 0
            graphpoints:
              Read:
                dpName: diskReadBytesRate_diskReadBytesRate
                format: '%7.2lf%s'
              Write:
                dpName: diskWriteBytesRate_diskWriteBytesRate
                format: '%7.2lf%s'
                color: 98df8a
          Disk Requests:
            units: requests/sec
            miny: 0
            graphpoints:
              Read:
                dpName: diskReadRequestsRate_diskReadRequestsRate
                format: '%7.2lf%s'
              Write:
                dpName: diskWriteRequestsRate_diskWriteRequestsRate
                format: '%7.2lf%s'
                color: 98df8a
      Vnic:
        description: 'OpenStackInfrastructure: Vnic Monitoring'
        targetPythonClass: ZenPacks.zenoss.OpenStackInfrastructure.Vnic
        datasources:
          networkIncomingBytesRate:
            type: OpenStack Ceilometer Perf AMQP
            severity: clear
            cycletime: 600
            datapoints:
              networkIncomingBytesRate:
                aliases: {if_received__bytessec: null}
            meter: network.incoming.bytes.rate
          networkIncomingPacketsRate:
            type: OpenStack Ceilometer Perf AMQP
            severity: clear
            cycletime: 600
            datapoints:
              networkIncomingPacketsRate:
                aliases: {if_received_packets__persec: null}
            meter: network.incoming.packets.rate
          networkOutgoingBytesRate:
            type: OpenStack Ceilometer Perf AMQP
            severity: clear
            cycletime: 600
            datapoints:
              networkOutgoingBytesRate:
                aliases: {if_sent__bytessec: null}
            meter: network.outgoing.bytes.rate
          networkOutgoingPacketsRate:
            type: OpenStack Ceilometer Perf AMQP
            severity: clear
            cycletime: 600
            datapoints:
              networkOutgoingPacketsRate:
                aliases: {if_sent_packets__persec: null}
            meter: network.outgoing.packets.rate
        graphs:
          Network Throughput:
            units: bits/sec
            miny: 0
            graphpoints:
              Inbound:
                dpName: networkIncomingBytesRate_networkIncomingBytesRate
                rpn: "8,*"
                format: '%7.2lf%s'
              Outbound:
                dpName: networkOutgoingBytesRate_networkOutgoingBytesRate
                rpn: "8,*"
                format: '%7.2lf%s'
                color: 98df8a
          Network Packet Rate:
            units: packets/sec
            miny: 0
            graphpoints:
              Inbound:
                dpName: networkIncomingPacketsRate_networkIncomingPacketsRate
                format: '%7.2lf%s'
              Outbound:
                dpName: networkOutgoingPacketsRate_networkOutgoingPacketsRate
                format: '%7.2lf%s'
                color: 98df8a
classes:
  #-----------------------------------------------------------------------------
  # Base Device Class Types
  #-----------------------------------------------------------------------------
  Endpoint:
    base: [zenpacklib.Device]
    meta_type: OpenStackInfrastructureEndpoint
    label: OpenStack Endpoint
    order: 1
    properties:
      neutron_core_plugin:
        label: Neutron Core Plugin
        grid_display: false
      neutron_ini:
        api_only: true
      neutron_mechanism_drivers:
        type: lines
        label: Neutron ML2 Mechanism Drivers
        default: []
        grid_display: false
      neutron_type_drivers:
        type: lines
        label: Neutron ML2 Type Drivers
        default: []
        grid_display: false
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: OpenStack Endpoints
    dynamicview_weight: 280
    dynamicview_relations:
      impacts: [hosts]
      openstack_link: [region]
  #-----------------------------------------------------------------------------
  # Component Base Class Types
  #-----------------------------------------------------------------------------
  OpenstackComponent:
    # Component Base Type
    base: [zenpacklib.Component]
    properties:
      resourceId:
        label: Ceilometer Resource ID
        grid_display: false
    filter_display: false
  DeviceProxyComponent:
    # Component Base Type
    base: [OpenstackComponent]
    properties:
      proxy_device:
        label: Device
        type: entity
        content_width: 175
        api_only: true
        api_backendtype: method
    filter_display: false
  OrgComponent:
    # Component Base Type
    base: [OpenstackComponent]
    relationships:
      # Provide better contextual naming for the relationships in the UI.
      #    These are inherited by child classes:
      #    'impacted_by': ['childOrgs', 'hosts', 'softwareComponents'],
      #    'impacts': ['parentOrg']
      childOrgs:
        label: Children
        order: 1.1
        label_width: 60
        content_width: 60
      hosts:
        label: Host
        order: 1.0
        label_width: 60
        content_width: 60
      parentOrg:
        label: Parent Region
        order: 1.0
        label_width: 60
        content_width: 60
      softwareComponents:
        label_width: 80
    filter_display: false
  SoftwareComponent:
    # Component Base Type
    base: [OpenstackComponent]
    label: SW Component
    label_width: 70
    content_width: 70
    properties:
      binary:
        label: Binary
        grid_display: false
        order: 1
      enabled:
        label: Enabled
        type: boolean
        label_width: 35
        renderer: Zenoss.render.openstack_ServiceEnabledStatus
        order: 2
      operStatus:
        label: State
        label_width: 20
        renderer: Zenoss.render.openstack_ServiceOperStatus
        order: 3
    relationships:
      hostedOn:
        content_width: 100
        order: !!float '-1'
      orgComponent:
        label: Supporting
        # Need to fix the default width for render_with_type
        content_width: 0
        grid_display: false
        render_with_type: true
        order: 1.0
    filter_display: false
    extra_paths:
    - ['orgComponent', '(parentOrg)+']
  LogicalComponent:
    base: [OpenstackComponent]
    filter_display: false
  #-----------------------------------------------------------------------------
  # Component Class Types
  #-----------------------------------------------------------------------------
  Tenant:
    base: [ZenPacks.zenoss.OpenStackInfrastructure.NeutronIntegrationComponent.NeutronIntegrationComponent, OpenstackComponent]
    meta_type: OpenStackInfrastructureTenant
    label: Tenant
    order: 5
    properties:
      description:
        label: Description
        content_width: 40
      implementation_components:
        type: entity
        label: Neutron Implementation
        grid_display: false
        api_only: true
        api_backendtype: method
      tenantId:
        label: Tenant ID
        grid_display: false
    relationships:
      floatingIps:
        label_width: 70
      instances:
        label_width: 50
      networks:
        label_width: 50
      ports:
        label_width: 50
      routers:
        label_width: 50
      subnets:
        label_width: 50
      volumes:
        grid_display: false
# release 2.2.0 does not do backup
#      backups:
#        grid_display: false
      volSnapshots:
        grid_display: false
      quota:
        grid_display: false
    dynamicview_views: [service_view]
    dynamicview_group: Tenants
    dynamicview_weight: 15
    dynamicview_relations:
      impacted_by: [instances, volumes, networks, subnets, implementation_components]
  Flavor:
    base: [LogicalComponent]
    meta_type: OpenStackInfrastructureFlavor
    label: Flavor
    order: 10
    properties:
      flavorDisk:
        type: int
        label: Disk
        renderer: Zenoss.render.bytesString
      flavorId:
        label: Flavor ID
        grid_display: false
      flavorRAM:
        type: int
        label: RAM
        renderer: Zenoss.render.bytesString
      flavorVCPUs:
        type: int
        label: VCPUs
      flavorType:
        label: Public
        grid_display: false
  Image:
    base: [LogicalComponent]
    meta_type: OpenStackInfrastructureImage
    label: Image
    order: 10
    properties:
      imageCreated:
        label: Created
        label_width: 140
        order: 3.1
      imageId:
        label: Image ID
        grid_display: false
      imageStatus:
        label: Status
        label_width: 40
        order: 3.5
      imageUpdated:
        label: Updated
        label_width: 140
        order: 3.2
    relationships:
      instances:
        label_width: 50
        content_width: 10
        order: 1.3
  Instance:
  # ----------------------------------------------------------------------------
  # Note: By (nova) design, hostId is a hash of the actual underlying host and
  # project, and is designed to allow users of a specific project to tell if
  # two VMs are on the same host, nothing more.  It is not a unique identifier
  # of hosts (compute nodes).
  # ----------------------------------------------------------------------------
    base: [LogicalComponent]
    meta_type: OpenStackInfrastructureInstance
    label: Instance
    order: 8
    properties:
      biosUuid:
        label: BIOS UUID
        grid_display: false
      guestDevice:
      # link to the guest instance, if known
        label: Guest
        type: entity
        grid_display: false
        api_only: true
        api_backendtype: method
      host:
        type: entity
        label: Host
        label_width: 70
        order: 3.0
        api_only: true
        api_backendtype: method
      hostId:
        label: Host ID
        grid_display: false
      hostName:
        label: Instance Title
        index_type: field
        grid_display: false
      hypervisorInstanceName:
        label: Hypervisor Instance Name
        grid_display: false
      publicIps:
        type: lines
        label: Floating IPs
        label_width: 60
        order: 3.2
      privateIps:
        type: lines
        label: Fixed IPs
        label_width: 60
        order: 3.3
      serialNumber:
        label: BIOS Serial Number
        index_type: field
        grid_display: false
        index_scope: global
      serverBackupDaily:
        label: Daily Server Backup
        grid_display: false
      serverBackupEnabled:
        type: boolean
        label: Backup
        grid_display: false
      serverBackupWeekly:
        label: Weekly Server Backup
        grid_display: false
      serverId:
        label: Server ID
        label_width: 200
      powerState:
        label: Power State
        label_width: 50
        order: 3.6
      taskState:
        label: Task State
        grid_display: false
      vmState:
        label: VM State
        label_width: 50
        order: 3.8
      serverStatus:
        label: Status
        label_width: 50
        order: 3.9
    relationships:
      flavor:
        label_width: 35
        content_width: 35
        order: 1.1
      hypervisor:
        grid_display: false
      image:
        label_width: 35
        content_width: 35
        order: 1.2
      ports:
        label: Ports
        grid_display: false
      tenant:
        label_width: 45
        content_width: 45
        order: 1.3
      vnics:
        label: Vnics
        grid_display: false
        order: 1.4
      volumes:
        label: Volumes
        label_width: 45
        content_width: 45
        order: 1.5
    dynamicview_views: [service_view]
    dynamicview_group: Instances
    dynamicview_weight: 211
    dynamicview_relations:
      impacted_by: [hypervisor, ports, vnics, volumes]
      impacts: [guestDevice, tenant]
    extra_paths:
      - ['hypervisor', 'host']
  Vnic:
    base: [LogicalComponent]
    meta_type: OpenStackInfrastructureVnic
    label: Vnic
    order: 100
    properties:
      instance:
        type: entity
        label: Instance
        order: 1.4
        api_only: true
        api_backendtype: method
        content_width: 120
      port:
        type: entity
        label: Port
        order: 1.41
        api_only: true
        api_backendtype: method
        content_width: 120
      macaddress:
        label: MAC Address
        index_type: field
        content_width: 100
        renderer: Zenoss.render.openstack_uppercase_renderer
        order: 1.0
        index_scope: global
    relationships:
      instance:
        grid_display: false
    dynamicview_views: [service_view]
    dynamicview_group: vNICs
    dynamicview_weight: 216
    dynamicview_relations:
      impacts: [instance]
  Region:
    base: [OrgComponent]
    meta_type: OpenStackInfrastructureRegion
    label: Region
    order: 1
    filter_hide_from: [Region, Cell, AvailabilityZone]
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Regions
    dynamicview_weight: 221
    dynamicview_relations:
      impacted_by: [childOrgs, hosts, softwareComponents, public_keystone_apiendpoint]
      impacts: [parentOrg]
      openstack_link: [childOrgs, softwareComponents]
  Cell:
    base: [OrgComponent]
    meta_type: OpenStackInfrastructureCell
    label: Cell
    order: 3
    filter_hide_from: [Region, Cell, AvailabilityZone]
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Cells
    dynamicview_weight: 222
    dynamicview_relations:
      impacted_by: [childOrgs, hosts, softwareComponents]
      impacts: [parentOrg]
      openstack_link: [childOrgs, hosts, softwareComponents]
  AvailabilityZone:
    base: [OrgComponent]
    meta_type: OpenStackInfrastructureAvailabilityZone
    label: Availability Zone
    order: 2
    filter_hide_from: [AvailabilityZone]
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Zones
    dynamicview_weight: 223
    dynamicview_relations:
      impacted_by: [childOrgs, hosts, softwareComponents]
      impacts: [parentOrg]
      openstack_link: [childOrgs, hosts, softwareComponents]
  Host:
    base: [DeviceProxyComponent]
    meta_type: OpenStackInfrastructureHost
    label: Host
    order: 9
    properties:
      hostfqdn:
        label: FQDN
        index_type: field
        grid_display: false
      hostlocalname:
        label: Local Hostname
        index_type: field
        grid_display: false
      hostname:
        label: Host Title
        index_type: field
        grid_display: false
      host_ip:
        label: Host Management IP
        grid_display: false

    relationships:
      orgComponent:
        label: Supporting
        # need to fix the default width for render_with_type
        content_width: 110
        render_with_type: true
        order: 1.0
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Hosts (OpenStack)
    dynamicview_weight: 271
    dynamicview_relations:
      impacted_by: [endpoint, proxy_device]
      impacts: [hypervisor, orgComponent, hostedSoftware]
      openstack_link: [hostedSoftware, hypervisor]
  NovaService:
    base: [SoftwareComponent]
    meta_type: OpenStackInfrastructureNovaService
    label: Nova Service
    order: 7
    # --------------------------------------------------------------------------
    # We must define that we're impacted_by osprocess_component both in the
    # Impact and DynamicView style. This is because OSProcess is not registered
    # into DynamicView's service_view, but we do want to see the impact both in
    # Impact, and DynamicView's Dependency View.
    # (ZEN-14579)
    # --------------------------------------------------------------------------
    impacted_by: [osprocess_component]
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Nova Services
    dynamicview_weight: 263
    dynamicview_relations:
      impacted_by: [hostedOn, osprocess_component]
      impacts: [orgComponent]
  NovaApi:
    base: [SoftwareComponent]
    meta_type: OpenStackInfrastructureNovaApi
    label: Nova API
    order: 7.1
    # --------------------------------------------------------------------------
    # We must define that we're impacted_by osprocess_component both in the
    # Impact and DynamicView style. This is because OSProcess is not registered
    # into DynamicView's service_view, but we do want to see the impact both in
    # Impact, and DynamicView's Dependency View.
    # (ZEN-14579)
    # --------------------------------------------------------------------------
    properties:
      enabled:
        grid_display: false
      operStatus:
        grid_display: false
    impacted_by: [osprocess_component]
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Nova APIs
    dynamicview_weight: 262
    dynamicview_relations:
      impacted_by: [hostedOn, osprocess_component]
      impacts: [orgComponent]
  NovaDatabase:
    base: [SoftwareComponent]
    meta_type: OpenStackInfrastructureNovaDatabase
    label: NovaDatabase
    order: 7.2
    filter_hide_from: [Region, Cell, AvailabilityZone, Host]
    # --------------------------------------------------------------------------
    # We must define that we're impacted_by osprocess_component both in the
    # Impact and DynamicView style. This is because OSProcess is not registered
    # into DynamicView's service_view, but we do want to see the impact both in
    # Impact, and DynamicView's Dependency View.
    # (ZEN-14579)
    # --------------------------------------------------------------------------
    impacted_by: [osprocess_component]
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Nova Databases
    dynamicview_weight: 264
    dynamicview_relations:
      impacted_by: [hostedOn, osprocess_component]
      impacts: [orgComponent]
  ApiEndpoint:
    # If the string $(tenant_id) or %(tenant_id) is in the URL, it will be
    # replaced with the tenant ID corresponding to zOpenStackProjectId for
    # the device.
    #
    # Future versions of this zenpack may add relationships to the
    # ApiEndpoint model, such as the region it supports and the software
    # component that is servicing requests for it.  (For instance, a
    # Nova ApiEndpoint would correspond to a NovaApi process.  In load
    # balancing situations, it could correspond to multiple processes)
    base: [OpenstackComponent]
    meta_type: OpenStackInfrastructureApiEndpoint
    label: API Endpoint
    order: 7.3
    monitoring_templates: [ApiEndpoint]
    properties:
      service_type:
        label: Type
      url:
        label: URL
        grid_display: false
      source:
        # source of this information - keystone[<interface>] or
        # a zprop name, for instance
        label: Source
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: OpenStack Endpoints
    dynamicview_relations:
      impacts: [region_if_public_keystone]
      openstack_link: [region_if_public_keystone]
  Hypervisor:
    base: [OpenstackComponent]
    meta_type: OpenStackInfrastructureHypervisor
    label: Hypervisor
    order: 9
    properties:
      hostfqdn:
        label: FQDN
        grid_display: false
      hypervisorId:
        label: Hypervisor ID
        type: int
        grid_display: false
      hstatus:
        label: Hypervisor Status
        label_width: 80
        content_width: 80
        order: 9.1
      hstate:
        label: Hypervisor State
        label_width: 80
        content_width: 80
        order: 9.2
      host_ip:
        label: Host IP
        label_width: 80
        content_width: 80
        order: 9.3
      hypervisor_type:
        label: Type
        label_width: 80
        content_width: 80
        order: 9.4
      hypervisor_version:
        label: Version
        label_width: 80
        content_width: 80
        order: 9.5
      vcpus:
        label: vCPU
        grid_display: false
        order: 9.6
      vcpus_used:
        label: vCPU Used
        grid_display: false
        order: 9.7
      memory:
        label: Memory (MB)
        grid_display: false
        order: 9.8
      memory_used:
        label: Memory Used (MB)
        grid_display: false
        order: 9.9
      memory_free:
        label: Memory Free (MB)
        grid_display: false
        order: 9.10
      disk:
        label: Disk (GB)
        grid_display: false
        order: 9.11
      disk_used:
        label: Disk Used (GB)
        grid_display: false
        order: 9.12
      disk_free:
        label: Disk Free (GB)
        grid_display: false
        order: 9.13
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Hypervisors
    dynamicview_weight: 226
    dynamicview_relations:
      impacted_by: [host]
      impacts: [instances]
  #-----------------------------------------------------------------------------
  # Neutron-Component Class Types
  #-----------------------------------------------------------------------------
  NeutronAgent:
    base: [SoftwareComponent]
    meta_type: OpenStackInfrastructureNeutronAgent
    label: Neutron Agent
    order: 11
    properties:
      agentId:
        label: Agent ID
        grid_display: false
      operStatus:
        label: Status
        label_width: 40
        renderer: Zenoss.render.openstack_ServiceOperStatus
        order: 11.1
      type:
        label: Type
        content_width: 60
        order: 1.1
    relationships:
      networks:
        label_width: 45
        order: 1.1
      routers:
        label_width: 40
        order: 1.3
      subnets:
        label_width: 40
        order: 1.2
    # --------------------------------------------------------------------------
    # We must define that we're impacted_by osprocess_component both in the
    # Impact and DynamicView style. This is because OSProcess is not registered
    # into DynamicView's service_view, but we do want to see the impact both in
    # Impact, and DynamicView's Dependency View.
    # (ZEN-14579)
    # --------------------------------------------------------------------------
    impacted_by: [osprocess_component]
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Neutron Agents
    dynamicview_weight: 261
    dynamicview_relations:
      impacted_by: [hostedOn, osprocess_component]
      impacts: [networks, subnets, routers]
  Network:
    base: [ZenPacks.zenoss.OpenStackInfrastructure.NeutronIntegrationComponent.NeutronIntegrationComponent, LogicalComponent]
    meta_type: OpenStackInfrastructureNetwork
    label: Network
    order: 12
    properties:
      admin_state_up:
        label: Admin State
        type: boolean
        label_width: 54
        renderer: Zenoss.render.openstack_ServiceEnabledStatus
        order: 2.2
      implementation_components:
        type: entity
        label: Neutron Implementation
        grid_display: false
        api_only: true
        api_backendtype: method
      netExternal:
        label: Net External
        type: boolean
        grid_display: false
      netId:
        label: Net ID
        grid_display: false
      netStatus:
        label: Status
        label_width: 35
        order: 2.19
      netType:
        label: Type
        label_width: 40
        order: 2.1
      title:
        label: Title
        grid_display: false
    relationships:
      floatingIps:
        grid_display: false
      neutronAgents:
        grid_display: false
      ports:
        label_width: 25
        order: 1.1
      routers:
        label_width: 40
        order: 1.2
      subnets:
        label_width: 40
        order: 1.3
      tenant:
        label_width: 50
        order: 1.5
    dynamicview_views: [service_view]
    dynamicview_group: Networks
    dynamicview_weight: 254
    dynamicview_relations:
      impacted_by: [neutronAgents]
      impacts: [subnets, tenant]
    # --------------------------------------------------------------------------
    # We use a normal impact adaptor for implementation_components, rather than
    # dynamicview impacts adaptor, because the implementation zenpack might not
    # use dynamic view (and therefore not be in service_view) and so will not be
    # exported from DV to impact currently (ZEN-14579).
    # --------------------------------------------------------------------------
    impacted_by: [implementation_components]
  Subnet:
    base: [ZenPacks.zenoss.OpenStackInfrastructure.NeutronIntegrationComponent.NeutronIntegrationComponent, LogicalComponent]
    meta_type: OpenStackInfrastructureSubnet
    label: Subnet
    order: 14
    properties:
      cidr:
        label: CIDR
        label_width: 90
        content_width: 70
        order: 1.1
      dns_nameservers:
        label: DNS Nameservers
        type: lines
        grid_display: false
      gateway_ip:
        label: Gateway
        label_width: 50
        content_width: 90
      implementation_components:
        type: entity
        label: Neutron Implementation
        grid_display: false
        api_only: true
        api_backendtype: method
      subnetId:
        label: Subnet ID
        grid_display: false
    relationships:
      network:
        label: Network
        label_width: 80
        order: 2.0
      neutronAgents:
        grid_display: false
      ports:
        label_width: 35
        order: 2.1
      routers:
        label_width: 45
        order: 2.2
      tenant:
        label_width: 50
        order: 2.3
    dynamicview_views: [service_view]
    dynamicview_group: Subnets
    dynamicview_weight: 252
    dynamicview_relations:
      impacted_by: [network, routers, neutronAgents]
      impacts: [ports, tenant]
    # --------------------------------------------------------------------------
    # We use a normal impact adaptor for implementation_components, rather than
    # dynamicview impacts adaptor, because the implementation zenpack might not
    # use dynamic view (and therefore not be in service_view) and so will not be
    # exported from DV to impact currently (ZEN-14579).
    # --------------------------------------------------------------------------
    impacted_by: [implementation_components]
  Router:
    base: [ZenPacks.zenoss.OpenStackInfrastructure.NeutronIntegrationComponent.NeutronIntegrationComponent, LogicalComponent]
    meta_type: OpenStackInfrastructureRouter
    label: Router
    order: 15
    properties:
      admin_state_up:
        label: Admin State
        grid_display: false
        renderer: Zenoss.render.openstack_ServiceEnabledStatus
        order: 1.1
      gateways:
        type: lines
        label: Gateways
        order: 1.2
      implementation_components:
        type: entity
        label: Neutron Implementation
        grid_display: false
        api_only: true
        api_backendtype: method
      routerId:
        label: Router ID
        grid_display: false
        order: 1.3
      routes:
        label: Routes
        type: lines
        grid_display: false
        order: 1.4
      status:
        label: Status
        label_width: 35
        order: 1.5
      title:
        label: Router
        grid_display: false
        order: 1.6
    relationships:
      floatingIps:
        label: Floating IPs
        label_width: 60
        order: 2.3
      network:
        label: External Network
        content_width: 90
        order: 2.1
      neutronAgents:
        grid_display: false
      subnets:
        label: Subnets
        label_width: 40
        order: 2.2
      tenant:
        label_width: 45
        content_width: 50
        order: 2.5
      ports:
        label_width: 45
        content_width: 50
        order: 2.4
    dynamicview_views: [service_view]
    dynamicview_group: Routers
    dynamicview_weight: 253
    dynamicview_relations:
      impacted_by: [neutronAgents]
      impacts: [subnets, floatingIps, ports]
    # --------------------------------------------------------------------------
    # We use a normal impact adaptor for implementation_components, rather than
    # dynamicview impacts adaptor, because the implementation zenpack might not
    # use dynamic view (and therefore not be in service_view) and so will not be
    # exported from DV to impact currently (ZEN-14579).
    # --------------------------------------------------------------------------
    impacted_by: [implementation_components]
  Port:
    base: [ZenPacks.zenoss.OpenStackInfrastructure.NeutronIntegrationComponent.NeutronIntegrationComponent, LogicalComponent]
    meta_type: OpenStackInfrastructurePort
    label: Port
    order: 16
    properties:
      title:
        label: Title
        grid_display: false
      admin_state_up:
        label: Admin State
        label_width: 60
        content_width: 50
        renderer: Zenoss.render.openstack_ServiceEnabledStatus
        order: 1.2
      device_owner:
        label: Device Owner
        grid_display: false
      fixed_ip_list:
        label: Fixed IPs
        label_width: 70
        grid_display: false
      vif_type:
        label: Type
        label_width: 20
        order: 1.13
      implementation_components:
        type: entity
        label: Neutron Implementation
        grid_display: false
        api_only: true
        api_backendtype: method
      mac_address:
        label: MAC
        content_width: 90
        order: 1.14
      portId:
        label: Port ID
        label_width: 40
        grid_display: false
      vnic:
        type: entity
        label: Vnic
        order: 1.15
        api_only: true
        api_backendtype: method
        label_width: 70
      status:
        label: Status
        label_width: 35
        order: 1.19
    relationships:
      floatingIps:
        grid_display: false
      instance:
        label_width: 50
        content_width: 40
        order: 1.1
      network:
        label: Network
        label_width: 40
        order: 1.2
      subnets:
        grid_display: false
      tenant:
        label_width: 35
        content_width: 35
        order: 1.4
      router:
        label_width: 35
        content_width: 35
        order: 1.3
    dynamicview_views: [service_view]
    dynamicview_group: Ports
    dynamicview_weight: 251
    dynamicview_relations:
      impacted_by: [subnets, floatingIps, router]
      impacts: [instance]
    # --------------------------------------------------------------------------
    # We use a normal impact adaptor for implementation_components, rather than
    # dynamicview impacts adaptor, because the implementation zenpack might not
    # use dynamic view (and therefore not be in service_view) and so will not be
    # exported from DV to impact currently (ZEN-14579).
    # --------------------------------------------------------------------------
    impacted_by: [implementation_components]
  FloatingIp:
    base: [ZenPacks.zenoss.OpenStackInfrastructure.NeutronIntegrationComponent.NeutronIntegrationComponent, LogicalComponent]
    meta_type: OpenStackInfrastructureFloatingIp
    label: Floating IP
    order: 19
    properties:
      fixed_ip_address:
        label: Attached IP
        content_width: 80
        order: 2.2
      floating_ip_address:
        label: Floating IP
        content_width: 80
        order: 2.3
      floatingipId:
        label: Floating ID
        grid_display: false
      implementation_components:
        type: entity
        label: Neutron Implementation
        grid_display: false
        api_only: true
        api_backendtype: method
      status:
        label: Status
        label_width: 35
        order: 2.6
    relationships:
      network:
        label_width: 40
        grid_display: false
        order: 1.1
      port:
        label_width: 90
        order: 1.2
      router:
        label_width: 50
        order: 1.3
      tenant:
        label_width: 50
        order: 1.4
    dynamicview_views: [service_view]
    dynamicview_group: Floating IPs
    dynamicview_weight: 215
    dynamicview_relations:
      impacted_by: [router]
      impacts: [port]
    # --------------------------------------------------------------------------
    # We use a normal impact adaptor for implementation_components, rather than
    # dynamicview impacts adaptor, because the implementation zenpack might not
    # use dynamic view (and therefore not be in service_view) and so will not be
    # exported from DV to impact currently (ZEN-14579).
    # --------------------------------------------------------------------------
    impacted_by: [implementation_components]
  CinderService:
    base: [SoftwareComponent]
    meta_type: OpenStackInfrastructureCinderService
    label: Cinder Service
    order: 20.1
    # --------------------------------------------------------------------------
    # We use a normal impact adaptor for osprocess_component, rather than
    # dynamicview impacts adaptor, because OSProcess is not part of
    # service_view, and so will not be exported from DV to impact  currently
    # (ZEN-14579).
    # --------------------------------------------------------------------------
    impacted_by: [osprocess_component]
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Cinder Services
    dynamicview_weight: 266
    dynamicview_relations:
      impacted_by: [hostedOn]
      impacts: [orgComponent]
  CinderApi:
    base: [SoftwareComponent]
    meta_type: OpenStackInfrastructureCinderApi
    label: Cinder API
    order: 20.1
    # --------------------------------------------------------------------------
    # We use a normal impact adaptor for osprocess_component, rather than
    # dynamicview impacts adaptor, because OSProcess is not part of
    # service_view, and so will not be exported from DV to impact  currently
    # (ZEN-14579).
    # --------------------------------------------------------------------------
    properties:
      enabled:
        grid_display: false
      operStatus:
        grid_display: false
    impacted_by: [osprocess_component]
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Cinder APIs
    dynamicview_weight: 265
    dynamicview_relations:
      impacted_by: [hostedOn]
      impacts: [orgComponent]
  Volume:
    base: [ZenPacks.zenoss.OpenStackInfrastructure.CinderIntegrationComponent.CinderIntegrationComponent, LogicalComponent]
    meta_type: OpenStackInfrastructureVolume
    label: Volume
    order: 21
    properties:
      bootable:
        label: Bootable
        label_width: 40
        content_width: 40
        order: 21.0
      size:
        label: Size (GB)
        type: int
        label_width: 40
        content_width: 40
        order: 21.1
      host:
        label: Host
        type: entity
        label_width: 100
        content_width: 100
        order: 21.2
        api_only: true
        api_backendtype: method
      backend:
        label: Back End
      status:
        label: Status
        label_width: 60
        content_width: 60
        order: 21.4
      volumeId:
        label: Volume ID
        grid_display: false
      avzone:
        label: Availability Zone
        grid_display: false
      created_at:
        label: Created At
        grid_display: false
      sourceVolumeId:
        label: Source Volume ID
        grid_display: false
      implementation_components:
        type: entity
        label: Cinder Implementation
        grid_display: false
        api_only: true
        api_backendtype: method
    relationships:
      tenant:
        label_width: 60
        content_width: 60
        order: 1.0
      instance:
        label_width: 60
        content_width: 60
        order: 1.1
      volSnapshots:
        label_width: 50
        content_width: 50
        order: 1.2
      volType:
        label: Volume Type
        label_width: 50
        order: 1.3
#      backups:
#        label_width: 50
#        content_width: 50
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Volumes
    dynamicview_weight: 242
    dynamicview_relations:
      impacts: [instance, volSnapshots, tenant]
    # --------------------------------------------------------------------------
    # We use a normal impact adaptor for implementation_components, rather than
    # dynamicview impacts adaptor, because the implementation zenpack might not
    # use dynamic view (and therefore not be in service_view) and so will not be
    # exported from DV to impact currently (ZEN-14579).
    # --------------------------------------------------------------------------
    impacted_by: [implementation_components]
  VolType:
    base: [LogicalComponent]
    meta_type: OpenStackInfrastructureVolType
    label: Volume Type
    order: 22
  VolSnapshot:
    base: [ZenPacks.zenoss.OpenStackInfrastructure.CinderIntegrationComponent.CinderIntegrationComponent, LogicalComponent]
    meta_type: OpenStackInfrastructureVolSnapshot
    label: Snapshot
    order: 23
    properties:
      created_at:
        label: Timestamp
        grid_display: false
        order: 2.0
      description:
        label: Description
        label_width: 100
        content_width: 100
        order: 2.1
      size:
        label: Size (GB)
        type: int
        label_width: 40
        content_width: 40
        order: 2.2
      progress:
        label: Progress
        label_width: 60
        content_width: 60
        order: 2.3
      status:
        label: Status
        label_width: 80
        content_width: 80
        order: 2.4
      implementation_components:
        type: entity
        label: Cinder Implementation
        grid_display: false
        api_only: true
        api_backendtype: method
        order: 2.5
    relationships:
      volume:
        label_width: 60
        content_width: 60
        order: 1.0
      tenant:
        label_width: 60
        content_width: 60
        order: 1.1
    dynamicview_views: [service_view, openstack_view]
    dynamicview_group: Snapshots
    dynamicview_weight: 241
    dynamicview_relations:
      impacted_by: [volume]
    # --------------------------------------------------------------------------
    # We use a normal impact adaptor for implementation_components, rather than
    # dynamicview impacts adaptor, because the implementation zenpack might not
    # use dynamic view (and therefore not be in service_view) and so will not be
    # exported from DV to impact currently (ZEN-14579).
    # --------------------------------------------------------------------------
    impacted_by: [implementation_components]
  Backup:
    base: [LogicalComponent]
    meta_type: OpenStackInfrastructureBackup
    label: Backup
    order: 24
    properties:
      created_at:
        label: Created At
        label_width: 100
        content_width: 90
      description:
        label: Description
        label_width: 130
        content_width: 130
      size:
        label: Size (GB)
        label_width: 40
        content_width: 40
      progress:
        label: Progress
        label_width: 100
        content_width: 100
      status:
        label: Status
        label_width: 80
        content_width: 80
#    relationships:
#      volume:
#        label_width: 80
#        content_width: 80
  Pool:
    base: [OpenstackComponent]
    meta_type: OpenStackInfrastructurePool
    label: Pool
    order: 25
    properties:
      qos_support:
        label: QoS Support
        grid_display: false
      allocated_capacity:
        label: Allocated Capacity
        label_width: 90
        content_width: 90
      free_capacity:
        label: Free Capacity
        label_width: 80
        content_width: 80
      total_capacity:
        label: Total Capacity
        label_width: 80
        content_width: 80
      driver_version:
        label: Driver Version
        grid_display: false
      location:
        label: Location
        grid_display: false
      reserved_percentage:
        label: Reserved Percentage
        label_width: 100
        content_width: 100
      storage_protocol:
        label: Storage Protocol
        label_width: 80
        content_width: 80
      vendor_name:
        label: Vendor Name
        grid_display: false
      volume_backend:
        label: Volume Backend
        grid_display: false
    relationships:
      orgComponent:
        grid_display: false
  Quota:
    base: [LogicalComponent]
    meta_type: OpenStackInfrastructureQuota
    label: Quota
    order: 26
    properties:
      tenant_name:
        label: Tenant Name
        label_width: 100
        content_width: 100
      backup_bytes:
        label: Backup (GB)
        type: int
        label_width: 60
        content_width: 60
      backups:
        label: Backups
        type: int
        label_width: 40
        content_width: 40
      bytes:
        type: int
        label: Bytes (GB)
        label_width: 50
        content_width: 50
      snapshots:
        label: Snapshots
        type: int
        label_width: 50
        content_width: 50
      volumes:
        label: Volumes
        type: int
        label_width: 50
        content_width: 50
    relationships:
      tenant:
        label_width: 80
        content_width: 80

event_classes:
  /OpenStack:
    remove: true

  /OpenStack/compute:
    remove: true
  /OpenStack/compute/instance:
    remove: true
    mappings:
      compute.instance.create.start:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.create.start
        explanation: Update model based upon compute.instance.create.start events
        zProperties:
          zEventAction: drop
      compute.instance.create.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.create.end
        explanation: Update model based upon compute.instance.create.end events
        zProperties:
          zEventAction: drop
      compute.instance.update:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.update
        explanation: Update model based upon compute.instance.update events
        zProperties:
          zEventAction: drop
      compute.instance.rescue.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.rescue.end
        explanation: Update model based upon compute.instance.rescue.end events
        zProperties:
          zEventAction: drop
      compute.instance.unrescue.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.unrescue.end
        explanation: Update model based upon compute.instance.unrescue.end events
        zProperties:
          zEventAction: drop
      compute.instance.rebuild.start:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.rebuild.start
        explanation: Update model based upon compute.instance.rebuild.start events
        zProperties:
          zEventAction: drop
      compute.instance.rebuild.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.rebuild.end
        explanation: Update model based upon compute.instance.rebuild.end events
        zProperties:
          zEventAction: drop
      compute.instance.shutdown.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.shutdown.end
        explanation: Update model based upon compute.instance.shutdown.end events
        zProperties:
          zEventAction: drop
      compute.instance.shutdown.start:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.shutdown.start
        explanation: Update model based upon compute.instance.shutdown.start events
        zProperties:
          zEventAction: drop
      compute.instance.reboot.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.reboot.end
        explanation: Update model based upon compute.instance.reboot.end events
        zProperties:
          zEventAction: drop
      compute.instance.reboot.start:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.reboot.start
        explanation: Update model based upon compute.instance.reboot.start events
        zProperties:
          zEventAction: drop
      compute.instance.power_on.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.power_on.end
        explanation: Update model based upon compute.instance.power_on.end events
        zProperties:
          zEventAction: drop
      compute.instance.live_migration._post.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.live_migration._post.end
        explanation: Update model based upon compute.instance.live_migration._post.end events
        zProperties:
          zEventAction: drop
      compute.instance.suspend:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.suspend
        explanation: Update model based upon compute.instance.suspend events
        zProperties:
          zEventAction: drop
      compute.instance.resume:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.resume
        explanation: Update model based upon compute.instance.resume events
        zProperties:
          zEventAction: drop
      compute.instance.resize.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.resize.end
        explanation: Update model based upon compute.instance.resize.end events
        zProperties:
          zEventAction: drop
      compute.instance.resize.revert.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.resize.revert.end
        explanation: Update model based upon compute.instance.resize.revert.end events
        zProperties:
          zEventAction: drop
      compute.instance.finish_resize.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.finish_resize.end
        explanation: Update model based upon compute.instance.finish_resize.end events
        zProperties:
          zEventAction: drop
      compute.instance.delete.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|compute.instance.delete.end
        explanation: Update model based upon compute.instance.delete.end events
        zProperties:
          zEventAction: drop
      compute.instance.create.error:
        remove: true
        eventClassKey: openstack|compute.instance.create.error
        sequence: 51
        explanation: An error has occurred while creating an instance
        zProperties:
          zEventSeverity: 4
      compute.instance.exists:
        remove: true
        eventClassKey: openstack|compute.instance.exists
        sequence: 52
        explanation: Drop compute.instance.exists events, not worth storing in event history.
        zProperties:
          zEventAction: drop
      compute.instance.exists.verified.old:
        remove: true
        eventClassKey: openstack|compute.instance.exists.verified.old
        sequence: 53
        explanation: Drop compute.instance.exists.verified.old events, not worth storing in event history.
        zProperties:
          zEventAction: drop
  /OpenStack/dhcp_agent:
    remove: true
  /OpenStack/firewall:
    remove: true
  /OpenStack/firewall_policy:
    remove: true
  /OpenStack/firewall_rule:
    remove: true
  /OpenStack/floatingip:
    remove: true
    mappings:
      floatingip.create.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|floatingip.create.end
        explanation: Update model based upon floatingip.create.end events
        zProperties:
          zEventAction: drop
      floatingip.update.start:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|floatingip.update.start
        explanation: Update model based upon floatingip.update.start events
        zProperties:
          zEventAction: drop
      floatingip.update.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|floatingip.update.end
        explanation: Update model based upon floatingip.update.end events
        zProperties:
          zEventAction: drop
      floatingip.delete.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|floatingip.delete.end
        explanation: Update model based upon floatingip.delete.end events
        zProperties:
          zEventAction: drop

  /OpenStack/network:
    remove: true
    mappings:
      network.create.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|network.create.end
        explanation: Update model based upon network.create.end events
        zProperties:
          zEventAction: drop
      network.update.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|network.update.end
        explanation: Update model based upon network.update.end events
        zProperties:
          zEventAction: drop
      network.delete.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|network.delete.end
        explanation: Update model based upon network.delete.end events
        zProperties:
          zEventAction: drop

  /OpenStack/port:
    remove: true
    mappings:
      port.create.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|port.create.end
        explanation: Update model based upon port.create.end events
        zProperties:
          zEventAction: drop
      port.update.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|port.update.end
        explanation: Update model based upon port.update.end events
        zProperties:
          zEventAction: drop
      port.delete.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|port.delete.end
        explanation: Update model based upon port.delete.end events
        zProperties:
          zEventAction: drop
  /OpenStack/router:
    remove: true
    mappings:
      router.create.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|router.create.end
        explanation: Update model based upon router.create.end events
        zProperties:
          zEventAction: drop
      router.update.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|router.update.end
        explanation: Update model based upon router.update.end events
        zProperties:
          zEventAction: drop
      router.delete.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|router.delete.end
        explanation: Update model based upon router.delete.end events
        zProperties:
          zEventAction: drop
  /OpenStack/security_group:
    remove: true
  /OpenStack/security_group_rule:
    remove: true
  /OpenStack/subnet:
    remove: true
    mappings:
      subnet.create.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|subnet.create.end
        explanation: Update model based upon subnet.create.end events
        zProperties:
          zEventAction: drop
      subnet.update.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|subnet.update.end
        explanation: Update model based upon subnet.update.end events
        zProperties:
          zEventAction: drop
      subnet.delete.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|subnet.delete.end
        explanation: Update model based upon subnet.delete.end events
        zProperties:
          zEventAction: drop
  /OpenStack/Cinder:
    remove: true
  /OpenStack/Cinder/Volume:
    remove: true    
    mappings:
      volume.create.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|volume.create.end
        explanation: Update model based upon volume.create.end events
        zProperties:
          zEventAction: drop
      volume.update.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|volume.update.end
        explanation: Update model based upon volume.update.end events
        zProperties:
          zEventAction: drop
      volume.attach.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|volume.attach.end
        explanation: Update model based upon volume.attach.end events
        zProperties:
          zEventAction: drop
      volume.detach.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|volume.detach.end
        explanation: Update model based upon volume.detach.end events
        zProperties:
          zEventAction: drop
      volume.delete.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|volume.delete.end
        explanation: Update model based upon volume.delete.end events
        zProperties:
          zEventAction: drop
  /OpenStack/Cinder/Snapshot:
    remove: true
    mappings:
      snapshot.create.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|snapshot.create.end
        explanation: Update model based upon snapshot.create.end events
        zProperties:
          zEventAction: drop
      snapshot.delete.end:
        remove: True
        transform: |-
          from ZenPacks.zenoss.OpenStackInfrastructure.events import process
          process(evt, device, dmd, txnCommit)
        eventClassKey: openstack|snapshot.delete.end
        explanation: Update model based upon snapshot.delete.end events
        zProperties:
          zEventAction: drop
  /OpenStack/image:
    remove: true
  /Status:
    remove: true
  /Status/Heartbeat:
    remove: true
  /Status/Heartbeat/instances:
    remove: true
    mappings:
      openStackCeilometerHeartbeat:
        remove: true
        eventClassKey: openStackCeilometerHeartbeat
        sequence: 10
  /Status/instances:
    remove: true
    mappings:
      openStackIniFileAccess:
        remove: true
        eventClassKey: openStackIniFileAccess
        sequence: 12
        explanation: An openstack configuration file could not be accessed.
        resolution: Correct the permissions so that the file is accessible.
      openStackIniFileOptionParsing:
        remove: true
        eventClassKey: openStackIniFileOptionParsing
        sequence: 12
        explanation: A required option was not found in an ini file on the openstack host.
        resolution: Add the required option to the file.
      openStackCinderServiceStatus:
        remove: true
        eventClassKey: openStackNeutronAgentStatus
        sequence: 12
        explanation: A neutron agent is not running properly
        resolution: Restart the offending agent.
      openStackCinderServiceStatus:
        remove: true
        eventClassKey: openStackNeutronAgentStatus
        sequence: 12
        explanation: A cinder agent is not running properly
        resolution: Restart the offending agent.
      openStackApiEndpointStatus:
        remove: true
        sequence: 12
        explanation: An openstack API endpoint is not responding to http queries.
        resolution: Troubleshoot or restart the responsible process.
      openStackNovaServiceStatus:
        remove: true
        sequence: 12
        explanation: A nova service is not running properly
        resolution: Restart the offending service.

process_class_organizers:
  /OpenStack:
    zProperties:
      zModelerLock: 1
    process_classes:
      ceilometer-agent-central:
          includeRegex: 'ceilometer-agent-central'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      ceilometer-agent-compute:
          includeRegex: 'ceilometer-agent-compute'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      ceilometer-agent-notification:
          includeRegex: 'ceilometer-agent-notification'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      ceilometer-alarm-evaluator:
          includeRegex: 'ceilometer-alarm-evaluator'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      ceilometer-alarm-notifier:
          includeRegex: 'ceilometer-alarm-notifier'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      ceilometer-api:
          includeRegex: 'ceilometer-api'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      ceilometer-collector:
          includeRegex: 'ceilometer-collector'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      ceilometer-polling:
          includeRegex: 'ceilometer-polling'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      neutron-dhcp-agent:
          includeRegex: 'neutron-dhcp-agent'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      neutron-l3-agent:
          includeRegex: 'neutron-l3-agent'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      neutron-metadata-agent:
          includeRegex: 'neutron-metadata-agent'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      neutron-openvswitch-agent:
          includeRegex: 'neutron-openvswitch-agent'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      neutron-server:
          includeRegex: 'neutron-server'
          excludeRegex: '\b(vim|tail|grep|pgrep|tar|cat|bash)\b'
      nova-api:
          includeRegex: 'nova-api'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      nova-cert:
          includeRegex: 'nova-cert'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      nova-compute:
          includeRegex: 'nova-compute'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      nova-conductor:
          includeRegex: 'nova-conductor'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      nova-consoleauth:
          includeRegex: 'nova-consoleauth'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      nova-network:
          includeRegex: 'nova-network'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      nova-scheduler:
          includeRegex: 'nova-scheduler'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      cinder-api:
          includeRegex: 'cinder-api'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      cinder-scheduler:
          includeRegex: 'cinder-scheduler'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      cinder-volume:
          includeRegex: 'cinder-volume'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      cinder-backup:
          includeRegex: 'cinder-backup'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      glance-api:
          includeRegex: 'glance-api'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      glance-registry:
          includeRegex: 'glance-registry'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      gnocchi-metricd:
          includeRegex: 'gnocchi-metricd'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      gnocchi-statsd:
          includeRegex: 'gnocchi-statsd'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      keystone-all:
          includeRegex: 'keystone-all'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      keystone-admin:
          includeRegex: 'keystone-admin'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      keystone-main:
          includeRegex: 'keystone-main'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      rabbitmq-server:
          includeRegex: 'rabbitmq-server'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      neutron-lbaas-agent:
          includeRegex: 'neutron-lbaas-agent'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
      neutron-metering-agent:
          includeRegex: 'neutron-metering-agent'
          excludeRegex: '\b(vim|tail|grep|tar|cat|bash)\b'
