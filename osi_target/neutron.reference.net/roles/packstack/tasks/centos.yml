---
# This play is for PackStack

#-------------------------------------------------------------------------------
#- Preliminary System Setup, get the network services in shape etc...
#- Install Packstack packages.
#- Requirements: Must have a system with minimum 3GB RAM
#-------------------------------------------------------------------------------

- name: "Set SELINUX"
  selinux: policy=targeted state=permissive

- name: "Disable Network Services, but leave it running during configuration!"
  service: name={{ item }}
           enabled=no
           # state=stopped: Packstack somehow needs it to be running.
  with_items:
    - NetworkManager
    - firewalld
  register: nm
  ignore_errors: true


- name: "Enable the *SANE* networking service"
  service: name={{ item }}
           enabled=yes
  with_items:
    - network

- name: "Uninstall Bad Packages"
  yum: name={{ item }}
       state=installed
  with_items:
    - firewalld

- name: "Install RDO Repo"
  yum: state=installed
       name=https://rdo.fedorapeople.org/rdo-release.rpm

- name: "Update Yum Cache"
  yum: name=* state=latest

- name: "Install Packstack Packages"
  yum: state=installed
       name={{ item }}
  with_items:
    - openstack-packstack
  ignore_errors: true

#-------------------------------------------------------------------------------
# MongoDB has an error in its puppet setup.
# It may not be needed later, but it is now for Centos7.
#-------------------------------------------------------------------------------
- name: "Fix the MongoDB Puppet entry for PID file"
  lineinfile: dest=/usr/lib/python2.7/site-packages/packstack/puppet/templates/mongodb.pp
              line="   pidfilepath  => '/var/run/mongodb/mongod.pid',"
              insertafter='^\s+bind_ip.*$'
              state=present

#-------------------------------------------------------------------------------
#- Reboot the Server so that network can start working properly
#-------------------------------------------------------------------------------

- name: "Reboot Server"
  sudo: true
  command: reboot
  when: nm.changed == true
  ignore_errors: true

- name: "waiting for server to come back"
  sudo: false
  local_action: wait_for
                host={{ inventory_hostname }}
                port=22
                state=started
                delay=10
  when: nm.changed == true

#-------------------------------------------------------------------------------
#- Packstack Configuration
#-------------------------------------------------------------------------------

- name: "Check if /root/keystonerc_admin exists. Remove file to force rebuild."
  stat: path=/root/keystonerc_admin
  register: keystone_admin

- name: "Run Packstack Installer"
  command: packstack
           --allinone
           --provision-all-in-one-ovs-bridge=n
           --provision-demo=n
           --default-password={{ keystone.OS_PASSWORD }}
  args:
    creates: /root/keystonerc_admin

#-------------------------------------------------------------------------------
#- External Network Configuration to allow Access to/from internal VMs
#-------------------------------------------------------------------------------

- name: "Setup Bridge interfaces."
  template: src={{ item.source }}
            dest=/etc/sysconfig/network-scripts/{{ item.dest }}
  with_items:
    - { source: 'ifcfg-br-ex', dest: 'ifcfg-br-ex' }
    - { source: 'ifcfg-if',    dest: 'ifcfg-{{hardware.if.name}}' }
  register: bridge_setup

- name: "Restart networking service"
  service: name=network state=restarted
  when: bridge_setup.changed == true

#===============================================================================
#  Reconfigure various Openstack/Neutron items
#===============================================================================

- name: "Add/Append plugins to neutron.conf"
  command: openstack-config --list --set neutron.conf 
           {{item.section}}
           {{item.parameter}}
           {{item.value}}
  with_items: neutron_plugins_extra
  when: not keystone_admin.stat.exists

- name: "Fix libvirt hyervisor; Use openstack-config to configure nova.conf"
  command: openstack-config --set /etc/nova/nova.conf
           {{item.section}}
           {{item.parameter}}
           {{item.value}}
  with_items: nova_conf
  when: not keystone_admin.stat.exists

- name: "Setup neutron/ml2 plugin.ini"
  command: openstack-config --set /etc/neutron/plugin.ini
           {{item.section}}
           {{item.parameter}}
           {{item.value}}
  with_items: neutron_ml2_plugin
  when: not keystone_admin.stat.exists
  register: ml2_setup

- name: "Set openvswitch settings"
  command: openstack-config --set /etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini
           {{item.section}}
           {{item.parameter}}
           {{item.value}}
  with_items: ovs_neutron_plugin
  when: not keystone_admin.stat.exists
  register: openvswitch_setup

- name: "Set L3 settings"
  command: openstack-config --set /etc/neutron/l3_agent.ini
           {{item.section}}
           {{item.parameter}}
           {{item.value}}
  with_items: neutron_l3_agent
  when: not keystone_admin.stat.exists
  register: l3_setup

- name: "Temporary Fix bug 1385908 in neutronclient api. "
  replace: 
    dest: "/usr/lib/python2.7/site-packages/neutronclient/neutron/v2_0/fw/firewallpolicy.py"
    regexp: "'--firewall-rules', type=str.split"
    replace: "'--firewall-rules', type=lambda x: x.split()"
  when: not keystone_admin.stat.exists

- name: "Bounce nova/neutron"
  service: name={{item}}
           state=restarted
  with_items: nova_services + neutron_services
  when: not keystone_admin.stat.exists

#-------------------------------------------------------------------------------
#- Configure RabbitMQ, Zenoss_dispatcher, Ceilometer, etc..
#-------------------------------------------------------------------------------

# Broken in current version: ansible looks for missing sbin
# - name: Enable RabbitMQ rabbitmq_management
#   rabbitmq_plugin: names=rabbitmq_management
#                    state=enabled
#                    new_only=yes
#                    prefix=/usr/lib/rabbitmq

- name: "Enable RabbitMQ rabbitmq_management with command"
  command: /usr/lib/rabbitmq/bin/rabbitmq-plugins enable rabbitmq_management

- name: "Install Zenoss plugin for dispatcher_zenoss"
  pip: name=https://github.com/zenoss/ceilometer_zenoss/archive/master.zip

- name: "stat ceilometer_zenoss/event_definitions.yaml"
  stat: path=/usr/lib/python2.7/site-packages/ceilometer_zenoss/event_definitions.yaml
  register: ceilometer_event_definitions

- name: "copy ceilometer_zenoss/event_definitions.yaml"
  command: cp /usr/lib/python2.7/site-packages/ceilometer_zenoss/event_definitions.yaml /etc/ceilometer/
  when: ceilometer_event_definitions.stat.exists

- name: "Modify /etc/ceilometer/ceilometer.conf to add event_defs with replace"
  replace: dest=/etc/ceilometer/ceilometer.conf
           regexp='^#dispatcher=database'
           replace='dispatcher=database\ndispatcher=zenoss'

- name: "Modify /etc/ceilometer/pipeline.yaml: set interval to 300s"
  replace: "dest=/etc/ceilometer/pipeline.yaml
            regexp='interval: 600$'
            replace='interval: 300'"

#-------------------------------------------------------------------------------
# Configure Ceilomater
#-------------------------------------------------------------------------------
- name: "Use openstack-config to configure ceilometer"
  command: openstack-config --set /etc/ceilometer/ceilometer.conf
           {{item.section}}
           {{item.parameter}}
           {{item.value}}
  with_items: ceilometer_cfg
  when: not keystone_admin.stat.exists

- name: "Bounce ceilometer"
  service: name={{item}}
           state=restarted
  with_items: ceilometer_services
  when: not keystone_admin.stat.exists

#-------------------------------------------------------------------------------
# Configure SSH and Miscellaneous
#-------------------------------------------------------------------------------
- name: "Increase MaxSessions for sshd"
  lineinfile: dest=/etc/ssh/sshd_config
              state=present
              regexp='^#MaxSessions 10'
              line='MaxSessions 100'
  notify: restart sshd

#-------------------------------------------------------------------------------
# Configure the normal user setup for testing ----------------------------------
#-------------------------------------------------------------------------------
#
- name: "Setup the credentials for the privileged user"
  command: cp /root/keystonerc_admin /home/{{sudo_user}}/

- name: "Setup attributes for keystonerc_admin"
  file: path=/home/{{sudo_user}}/keystonerc_admin
        mode=0444

- name: "Add keystone creds to users bashrc"
  lineinfile: dest=/home/{{sudo_user}}/.bashrc
              line="source $HOME/keystonerc_admin"
              insertafter=EOF
              state=present

- name: Template alias.bash for service restart functions
  sudo: False
  template:
    src=zenoss/alias.bash
    dest=/home/{{sudo_user}}/alias.bash

